#!/bin/bash
# postinst script for xroad-center
#
# see: dh_installdeb(1)

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

. /usr/share/debconf/confmodule

local_psql() {
  local cmd="psql -qtAU postgres $*"
  su -l -c "$cmd" postgres
}

remote_psql() {
  psql -h "$db_addr" -p "$db_port" -qtAU postgres "$@"
}

get_prop() {
  crudini --get "$1" '' "$2" 2>/dev/null || echo -n "$3"
}

case "$1" in
    configure)

    db_properties=/etc/xroad/db.properties
    root_properties=/etc/xroad.properties

    RET=
    db_get xroad-common/database-host
    db_host="$RET"
    db_addr=${db_host%%:*}
    db_port=${db_host##*:}
    crudini --set ${db_properties} '' host ${db_addr}
    crudini --set ${db_properties} '' port ${db_port}

    if  [[ -f ${root_properties} && $(get_prop ${root_properties} postgres.connection.password) != "" ]]
    then
        master_passwd=$(crudini --get ${root_properties} '' postgres.connection.password)
        export PGPASSWORD=${master_passwd}
        psql_cmd=remote_psql
    else
        psql_cmd=local_psql
    fi

    if  ! $psql_cmd --list -F "' '" | grep template1 | awk '{print $3}' | grep -q "UTF8"
    then echo -e "\n\nPostgreSQL is not UTF8 compatible."
      echo -e "Aborting installation! Please fix issues and rerun\n\n"
      exit 101
    fi

    if [[ $($psql_cmd <<< "SELECT 1 FROM pg_roles WHERE rolname='centerui';") = "1" ]]
    then
      echo "User exists, skipping postgres schema creation."
    else
      if  [[ -f ${root_properties} && $(get_prop ${root_properties} postgres.connection.password) != "" ]]
      then
          $($psql_cmd <<< "CREATE ROLE centerui LOGIN PASSWORD 'centerui';")
          $($psql_cmd <<< "GRANT centerui to postgres;")
          createdb -h $db_addr -p $db_port -O centerui -U postgres -E UTF-8 centerui_production
          $($psql_cmd -d centerui_production <<< "CREATE EXTENSION hstore;")
      else
          su - postgres -c /usr/share/xroad/db/create_schema.sh
      fi
    fi

    echo "Running db migrations."
    /usr/share/xroad/db/migrate.sh db:migrate
    if [[ $? -ne 0 ]]
    then
      echo "Database migrate failed. ABORTING."
      exit 2
    fi

    RET=""
    db_get xroad-common/username
    AUSER="$RET"

    #add groups
    groups="xroad-security-officer xroad-system-administrator xroad-registration-officer"
    usergroups=" $(id -Gn "$AUSER") "
    for groupname in $groups; do
        if ! getent group "$groupname" > /dev/null; then
            groupadd --system "$groupname" || true
        fi
        if [[ $usergroups != *" $groupname "* ]]; then
            usermod -a -G "$groupname" "$AUSER" || true
        fi
    done

    chmod 755 /var/lib/xroad/public
    chown xroad:xroad /var/lib/xroad/public

    test -d /var/cache/xroad && test -w /var/cache/xroad || mkdir /var/cache/xroad ; chown xroad:xroad /var/cache/xroad
    test -d /etc/xroad/configuration-parts || mkdir /etc/xroad/configuration-parts ; chown xroad:xroad /etc/xroad/configuration-parts

    mkdir -p  /var/lib/xroad/import
    chmod 755 /var/lib/xroad/import
    chown xroad:xroad /var/lib/xroad/import
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.
#DEBHELPER#

db_stop
service rsyslog restart
service xroad-jetty restart
service xroad-signer restart
#workaround for buggy nginx installation
/usr/sbin/nginx -s stop || true
service nginx restart

exit 0
