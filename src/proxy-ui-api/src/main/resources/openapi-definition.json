{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "X-Road UI Based API",
    "description" : "X-Road UI Based API",
    "contact" : {
      "email" : "lauri.koutaniemi@gofore.com"
    },
    "license" : {
      "name" : "MIT",
      "url" : "https://opensource.org/licenses/MIT"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/Gofore/X-Road/1.0.0",
    "description" : "X-Road API Design"
  } ],
  "security" : [ {
    "cookieAuth" : [ ]
  } ],
  "tags" : [ {
    "name" : "security server",
    "description" : "<br>Security Server operations and API calls"
  }, {
    "name" : "central server",
    "description" : "<br>Central Server operations and API calls"
  } ],
  "paths" : {
    "/backups" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "search security server backups",
        "description" : "SS administrator views or searches backups of the security server.",
        "operationId" : "getBackups",
        "parameters" : [ {
          "name" : "term",
          "in" : "query",
          "description" : "pass an optional search string for looking up backups",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Backup"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "add new backup for the security server",
        "description" : "Adds backup to the system",
        "operationId" : "addBackup",
        "requestBody" : {
          "description" : "backup to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Backup"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/backups/upload" : {
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "upload new backup for the security server",
        "description" : "Uploads new backup to the system",
        "operationId" : "uploadBackup",
        "parameters" : [ {
          "name" : "file",
          "in" : "query",
          "description" : "optional backup file",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "backup to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Backup"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/backups/{id}" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get security server backup information",
        "description" : "SS administrator views the backup details of the security server.",
        "operationId" : "getBackup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the backup",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Backup"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "delete security server backup",
        "description" : "SS administrator deletes the backup of the security server.",
        "operationId" : "deleteBackup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the backup",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Backup"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/backups/{id}/restore" : {
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "restore configuration from backup",
        "description" : "SS administrator restores the configuration from backup.",
        "operationId" : "restoreBackup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the backup",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "restore ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Backup"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/backups/{id}/download" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "download security server backup",
        "description" : "SS administrator downloads the backup of the security server.",
        "operationId" : "downloadBackup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the backup",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Backup"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/certificates/{id}" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get certificate information",
        "description" : "SS administrator views certificate details.",
        "operationId" : "getCertificate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the certificate",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificate"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "delete certificate",
        "description" : "SS administrator deletes the certificate.",
        "operationId" : "deleteCertificate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the certificate",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Certificate"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/certificates/{id}/activate" : {
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "activate certificate",
        "description" : "SS administrator activates selected certificate.",
        "operationId" : "activateCertificate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the certificate",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "activation ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificate"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/certificates/{id}/disable" : {
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "disable certificate",
        "description" : "SS administrator disables selected certificate.",
        "operationId" : "disableCertificate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the certificate",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "disabled",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificate"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/certificates/{id}/register" : {
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "register certificate",
        "description" : "SS administrator registers selected certificate.",
        "operationId" : "registerCertificate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the certificate",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "registered",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificate"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/certificates/{id}/unregister" : {
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "unregister certificate",
        "description" : "SS administrator unregisters selected certificate.",
        "operationId" : "unregisterCertificate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the certificate",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "unregister ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificate"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/clients" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "search security server clients",
        "description" : "SS administrator views or search the clients of the security server.",
        "operationId" : "getClients",
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Client"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "adds new client for security server",
        "description" : "Adds an item to the system",
        "operationId" : "addClient",
        "requestBody" : {
          "description" : "client to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Client"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/clients/{id}" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get security server client information",
        "description" : "SS administrator views the client details of the security server.",
        "operationId" : "getClient",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the client",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Client"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "update security server client information",
        "description" : "SS administrator updates the client information.",
        "operationId" : "updateClient",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the client",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "other",
          "in" : "query",
          "description" : "other parameters tbd",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "update ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Client"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "delete security server client",
        "description" : "SS administrator deletes the client of the security server.",
        "operationId" : "deleteClient",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the client",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Client"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/clients/{id}/certificates" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get security server client TLS certificates information",
        "description" : "SS administrator views the TLS certificates for the client.",
        "operationId" : "getClientCertificates",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the client",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Certificate"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "add new certificate for the security server client",
        "description" : "SS administrator adds a new certificate for the client.",
        "operationId" : "addClientCertificate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the client",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "file",
          "in" : "query",
          "description" : "certificate file",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "certificate to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Certificate"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/clients/{id}/certificates/{cid}" : {
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "delete certificate",
        "description" : "SS administrator deletes the certificate from selected client.",
        "operationId" : "deleteClientCertificate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the client",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cid",
          "in" : "path",
          "description" : "id of the certificate",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Certificate"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/clients/{id}/groups" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get local groups for the selected client",
        "description" : "SS administrator views the local groups for the client.",
        "operationId" : "getClientGroups",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the client",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Group"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "add new local group for the security server client",
        "description" : "SS administrator adds a new local group for the client.",
        "operationId" : "addClientGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the client",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "group to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/clients/{id}/register" : {
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "register security server client",
        "description" : "SS administrator registers client.",
        "operationId" : "registerClient",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the client",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Client"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/clients/{id}/serviceclients" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get service clients for the selected client",
        "description" : "SS administrator views the service clients for the client.",
        "operationId" : "getClientServiceclients",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the client",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ServiceClient"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "add new service client for the security server client",
        "description" : "SS administrator adds a new service client for the client.",
        "operationId" : "addClientServiceclient",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the client",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "service client to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceClient"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/clients/{id}/services" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get security server client services",
        "description" : "SS administrator views the services for the client.",
        "operationId" : "getClientServices",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the client",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Service"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/clients/{id}/settings" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get server settings",
        "description" : "SS administrator views the settings for the client.",
        "operationId" : "getClientSettings",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the client",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Settings"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/clients/{id}/unregister" : {
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "unregister security server client",
        "description" : "SS administrator unregisters client.",
        "operationId" : "unregisterClient",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the client",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Client"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/clients/{id}/wsdls" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get security server client WSDL files",
        "description" : "SS administrator views the WSDL files for the client.",
        "operationId" : "getClientWsdls",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the client",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Wsdl"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "add new wsdl for the security server client",
        "description" : "SS administrator adds a new wsdl for the client.",
        "operationId" : "addClientWsdl",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the client",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "service client to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Wsdl"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/groups/{id}" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get local group information",
        "description" : "SS administrator views local group details.",
        "operationId" : "getGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the local group",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "update local group information",
        "description" : "SS administrator updates the local group information.",
        "operationId" : "updateGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the local group",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "other",
          "in" : "query",
          "description" : "other parameters tbd",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "update ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "delete local group",
        "description" : "SS administrator deletes the local group.",
        "operationId" : "deleteGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the local group",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Group"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/groups/{id}/members" : {
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "add new member for the local group",
        "description" : "SS administrator adds a new member for the local group.",
        "operationId" : "addGroupMember",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the client",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "member to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Member"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/groups/{id}/members/{mid}" : {
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "delete member from local group",
        "description" : "SS administrator deletes the member from local group.",
        "operationId" : "deleteGroupMember",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the group",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mid",
          "in" : "path",
          "description" : "id of the member",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Member"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/keys/{id}" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get information for the selected key",
        "description" : "SS administrator views key details.",
        "operationId" : "getKey",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Key"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "update key information",
        "description" : "SS administrator updates the key information.",
        "operationId" : "updateKey",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "other",
          "in" : "query",
          "description" : "other parameters tbd",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "update ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Key"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "delete key",
        "description" : "SS administrator deletes the key.",
        "operationId" : "deleteKey",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Key"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/keys/{id}/certificates" : {
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "adds new certificate for selected key",
        "description" : "Adds certificate to the system",
        "operationId" : "addCertificate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "import",
          "in" : "query",
          "description" : "import file",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "false"
          }
        } ],
        "requestBody" : {
          "description" : "Certificate to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Certificate"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/keys/{id}/generatecsr" : {
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "generate csr for the selected key",
        "description" : "SS administrator generates csr for the key.",
        "operationId" : "genrerateCsr",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key_usage",
          "in" : "query",
          "description" : "inteded usage for the key (signing or authentication)",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "approved_ca",
          "in" : "query",
          "description" : "approved certification service",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "csr_format",
          "in" : "query",
          "description" : "format of the certificate signing request (PEM or DER)",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "member_id",
          "in" : "query",
          "description" : "security server client the certificate will be issued for (only for signing certificates)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/pkcs10" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/keys/{id}/deletecsr" : {
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "generate csr for the selected key",
        "description" : "SS administrator generates csr for the key.",
        "operationId" : "deleteCsr",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Key"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/language" : {
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "change language",
        "description" : "SS administrator changes the language for the UI.",
        "operationId" : "language",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the language (language code)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "language changed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Language"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/user" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get user data for the logged user",
        "description" : "SS administrator gets user data from backend.",
        "operationId" : "user",
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security" : [ ]
      }
    },
    "/services/{id}" : {
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "update service information",
        "description" : "SS administrator updates the service information.",
        "operationId" : "updateService",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the service",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "other",
          "in" : "query",
          "description" : "other parameters tbd",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "update ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Service"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "delete service",
        "description" : "SS administrator deletes the service.",
        "operationId" : "deleteService",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the service",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Service"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/services/{id}/accessrights" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get access rights for the selected service",
        "description" : "SS administrator views service accessrights.",
        "operationId" : "getServiceAccessrights",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the service",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Accessright"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "adds new accessright for selected service",
        "description" : "Adds accessright to the service",
        "operationId" : "addServiceAccessright",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the service",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "other",
          "in" : "query",
          "description" : "tbd",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "false"
          }
        } ],
        "requestBody" : {
          "description" : "accessright to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accessright"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/services/{id}/accessrights/{aid}" : {
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "remove accessright",
        "description" : "SS administrator removes accessright from selected service.",
        "operationId" : "deleteServiceAccessright",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the service",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aid",
          "in" : "path",
          "description" : "id of the accessright",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "accessright removed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Accessright"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/serviceclients/{id}/accessrights" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get access rights for the selected service client.",
        "description" : "SS administrator views service client's accessrights.",
        "operationId" : "getServiceclientAccessrights",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the service client",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Accessright"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "adds new accessright for selected service client",
        "description" : "Adds accessright to the service client.",
        "operationId" : "addServiceclientAccessright",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the service",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "other",
          "in" : "query",
          "description" : "tbd",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "false"
          }
        } ],
        "requestBody" : {
          "description" : "accessright to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accessright"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/serviceclients/{id}/accessrights/{aid}" : {
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "remove accessright",
        "description" : "SS administrator removes accessright from selected service client.",
        "operationId" : "deleteServiceclientAccessright",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the service client",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aid",
          "in" : "path",
          "description" : "id of the accessright",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "accessright removed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Accessright"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/system" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get system information",
        "description" : "SS administrator views the system information.",
        "operationId" : "getSystem",
        "responses" : {
          "200" : {
            "description" : "information fetched successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/System"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/system/anchor" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "view the configuration anchor information",
        "description" : "SS administrator views the configuration anchor information.",
        "operationId" : "getAnchor",
        "parameters" : [ {
          "name" : "download",
          "in" : "query",
          "description" : "to be decided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "false"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "information fetched successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Anchor"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "update configuration anchor",
        "description" : "SS administrator updates configuration anchor information.",
        "operationId" : "updateAnchor",
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Anchor"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "upload a configuration anchor file",
        "description" : "SS administrator uploads configuration anchor file",
        "operationId" : "uploadAnchor",
        "requestBody" : {
          "description" : "Configuration to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Anchor"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/system/anchor/download" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "download configuration anchor information",
        "description" : "SS administrator downloads the configuration anchor information.",
        "operationId" : "downloadAnchor",
        "responses" : {
          "200" : {
            "description" : "information fetched successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Anchor"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/system/timestamping" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "view the timestamping service information",
        "description" : "SS administrator views the timestamping service information.",
        "operationId" : "getTimestamping",
        "responses" : {
          "200" : {
            "description" : "information fetched successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Timestamping"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "add a timestamping service",
        "description" : "SS administrator adds new timestamping service",
        "operationId" : "addTimestamping",
        "requestBody" : {
          "description" : "Timestamping service to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Timestamping"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      },
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "delete timestamping service",
        "description" : "SS administrator removes timestamping service.",
        "operationId" : "deleteTimestamping",
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/System"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/system/version" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get information for the system version",
        "description" : "SS administrator views key details.",
        "operationId" : "systemVersion",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/System"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/tokens" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "search security server tokens",
        "description" : "SS administrator views or search the tokens of the security server.",
        "operationId" : "getTokens",
        "parameters" : [ {
          "name" : "term",
          "in" : "query",
          "description" : "pass an optional search string for looking up tokens",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "number of records to skip for pagination",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum number of records to return",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 50,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Token"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "adds new token for security server",
        "description" : "Adds token to the system",
        "operationId" : "addToken",
        "requestBody" : {
          "description" : "Token to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Token"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/tokens/{id}" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get security server token information",
        "description" : "SS administrator views the token details of the security server.",
        "operationId" : "getToken",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Token"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "update security server token information",
        "description" : "SS administrator updates the token information.",
        "operationId" : "updateToken",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "other",
          "in" : "query",
          "description" : "other parameters tbd",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "update ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Token"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "delete security server token",
        "description" : "SS administrator deletes the token of the security server.",
        "operationId" : "deleteToken",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Token"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/tokens/{id}/keys" : {
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "adds new key",
        "description" : "Adds key for selected token.",
        "operationId" : "addKey",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "label",
          "in" : "query",
          "description" : "label for the token",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Key to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Key"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/tokens/{id}/login" : {
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "logins to token",
        "description" : "Login to token",
        "operationId" : "loginToken",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Token to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Token"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/tokens/{id}/logout" : {
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "logout from token",
        "description" : "SS administrator logs out from token.",
        "operationId" : "logoutToken",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "logout successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Token"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/wsdls/{id}" : {
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "update address or services for the selected wsdl",
        "description" : "SS administrator updates the selected wsdl.",
        "operationId" : "updateWsdl",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the wsdl",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "other",
          "in" : "query",
          "description" : "other parameters tbd",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "update ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Wsdl"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "delete wsdl",
        "description" : "SS administrator deletes the wsdl.",
        "operationId" : "deleteWsdl",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the wsdl",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Wsdl"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/wsdls/{id}/disable" : {
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "disable selected wsdl",
        "description" : "SS administrator disables wsdl.",
        "operationId" : "disableWsdl",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the wsdl",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Wsdl"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/wsdls/{id}/enable" : {
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "enable selected wsdl",
        "description" : "SS administrator enables wsdl.",
        "operationId" : "enableWsdl",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the wsdl",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Wsdl"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/wsdls/{id}/refresh" : {
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "refresh selected wsdl",
        "description" : "SS administrator refreshes wsdl.",
        "operationId" : "refreshWsdl",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the wsdl",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Wsdl"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Accessright" : {
        "required" : [ "acl_id", "client_id", "id", "service_code", "subject_id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "123"
          },
          "acl_id" : {
            "type" : "string",
            "example" : "123"
          },
          "client_id" : {
            "type" : "string",
            "example" : "123"
          },
          "subject_id" : {
            "type" : "string",
            "example" : "123"
          },
          "service_code" : {
            "type" : "string",
            "example" : "123"
          }
        }
      },
      "Anchor" : {
        "required" : [ "created", "hash", "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "123"
          },
          "hash" : {
            "type" : "string",
            "example" : "42:34:C3:22:55:42:34:C3:22:55:42:34:C3:22:55:42:34:C3:22:55:42:34:C3:22:55:42:34:C3"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Authorities" : {
        "required" : [ "created", "id", "name", "response" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "123"
          },
          "name" : {
            "type" : "string",
            "example" : "Distinguished name"
          },
          "response" : {
            "type" : "string",
            "example" : "N/A"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Backup" : {
        "required" : [ "created", "filename", "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "filename" : {
            "type" : "string",
            "example" : "configuration_backup_20181224.tar"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Certificate" : {
        "required" : [ "client_id", "data", "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "123"
          },
          "client_id" : {
            "type" : "string",
            "example" : "123"
          },
          "data" : {
            "type" : "string",
            "format" : "binary"
          }
        }
      },
      "Client" : {
        "required" : [ "id", "member_class", "member_code", "member_name", "status", "subsystem_code" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "FI:GOV:123:ABC"
          },
          "member_name" : {
            "type" : "string",
            "example" : "FI"
          },
          "member_class" : {
            "type" : "string",
            "example" : "GOV"
          },
          "member_code" : {
            "type" : "string",
            "example" : "123"
          },
          "subsystem_code" : {
            "type" : "string",
            "example" : "ABC"
          },
          "status" : {
            "type" : "string",
            "example" : "Registered"
          }
        }
      },
      "Group" : {
        "required" : [ "client_id", "code", "description", "id", "updated" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1"
          },
          "client_id" : {
            "type" : "string",
            "example" : "1"
          },
          "code" : {
            "type" : "string",
            "example" : "groupcode"
          },
          "description" : {
            "type" : "string",
            "example" : "tbd"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Key" : {
        "required" : [ "id", "name", "status", "token_id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "123"
          },
          "token_id" : {
            "type" : "string",
            "example" : "123"
          },
          "name" : {
            "type" : "string",
            "example" : "Authentication key"
          },
          "type" : {
            "type" : "string",
            "example" : "AUTH"
          },
          "status" : {
            "type" : "string",
            "example" : "Registered"
          }
        }
      },
      "Language" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "Member" : {
        "required" : [ "created", "group_id", "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "123"
          },
          "group_id" : {
            "type" : "string",
            "example" : "123"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Service" : {
        "required" : [ "code", "id", "ssl", "timeout", "title", "url", "version", "wsdl_id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "123"
          },
          "wsdl_id" : {
            "type" : "string",
            "example" : "123"
          },
          "code" : {
            "type" : "string",
            "example" : "123"
          },
          "version" : {
            "type" : "string",
            "example" : "123"
          },
          "title" : {
            "type" : "string",
            "example" : "123"
          },
          "url" : {
            "type" : "string",
            "example" : "123"
          },
          "ssl" : {
            "type" : "string",
            "format" : "boolean",
            "example" : "true"
          },
          "timeout" : {
            "type" : "string",
            "format" : "uint",
            "example" : "123"
          }
        }
      },
      "ServiceClient" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "GLOBALGROUP:DEV:security-server-owners"
          },
          "name" : {
            "type" : "string",
            "example" : "Security server owners"
          }
        }
      },
      "Settings" : {
        "required" : [ "code", "owner" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "example" : "123"
          },
          "owner" : {
            "type" : "string",
            "format" : "boolean",
            "example" : "false"
          }
        }
      },
      "Token" : {
        "required" : [ "id", "name", "status", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "123"
          },
          "name" : {
            "type" : "string",
            "example" : "softToken-0"
          },
          "type" : {
            "type" : "string",
            "example" : "software"
          },
          "status" : {
            "type" : "string",
            "example" : "ok"
          }
        }
      },
      "System" : {
        "required" : [ "anchor", "authorities", "certificate", "timestamping" ],
        "type" : "object",
        "properties" : {
          "anchor" : {
            "$ref" : "#/components/schemas/Anchor"
          },
          "timestamping" : {
            "$ref" : "#/components/schemas/Timestamping"
          },
          "authorities" : {
            "$ref" : "#/components/schemas/Authorities"
          },
          "certificate" : {
            "$ref" : "#/components/schemas/Certificate"
          }
        }
      },
      "Timestamping" : {
        "required" : [ "id", "name", "url" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "123"
          },
          "name" : {
            "type" : "string",
            "example" : "X-Road Test TSA CN"
          },
          "url" : {
            "type" : "string",
            "example" : "http://dev.xroad.rocks:123"
          }
        }
      },
      "User" : {
        "required" : [ "role", "username" ],
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "example" : "Guest"
          },
          "role" : {
            "type" : "string",
            "format" : "uint",
            "example" : "0"
          }
        }
      },
      "Wsdl" : {
        "required" : [ "client_id", "disabled", "id", "refresh", "url" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "123"
          },
          "client_id" : {
            "type" : "string",
            "example" : "123"
          },
          "url" : {
            "type" : "string",
            "example" : "http://dev.xroad.rocks/services.wsdl"
          },
          "refresh" : {
            "type" : "string",
            "format" : "date-time"
          },
          "disabled" : {
            "type" : "string",
            "format" : "boolean",
            "example" : "false"
          }
        }
      }
    },
    "securitySchemes" : {
      "cookieAuth" : {
        "type" : "apiKey",
        "name" : "JSESSIONID",
        "in" : "cookie"
      }
    }
  }
}