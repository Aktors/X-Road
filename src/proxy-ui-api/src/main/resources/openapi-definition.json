{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "X-ROAD API",
    "url" : "https://virtserver.swaggerhub.com/lakoutan/X-Road/1.0.0"
  } ],
  "info" : {
    "description" : "X-Road UI Based API",
    "version" : "1.0.0",
    "title" : "X-Road UI Based API",
    "contact" : {
      "email" : "lauri.koutaniemi@gofore.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "security server",
    "description" : "<br>Security Server operations and API calls"
  }, {
    "name" : "central server",
    "description" : "<br>Central Server operations and API calls"
  } ],
  "paths" : {
    "/backups" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "search security server backups",
        "operationId" : "getBackups",
        "description" : "SS administrator views or searches backups of the security server.",
        "parameters" : [ {
          "in" : "query",
          "name" : "term",
          "description" : "pass an optional search string for looking up backups",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "offset",
          "description" : "number of records to skip for pagination",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "in" : "query",
          "name" : "limit",
          "description" : "maximum number of records to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0,
            "maximum" : 50
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Backup"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "add or upload new backup for the security server",
        "operationId" : "addBackup",
        "description" : "Adds backup to the system",
        "parameters" : [ {
          "in" : "query",
          "name" : "file",
          "description" : "optional backup file",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Backup"
              }
            }
          },
          "description" : "backup to add"
        }
      }
    },
    "/backups/{id}" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get or download security server backup information",
        "operationId" : "getBackup",
        "description" : "SS administrator views the backup details of the security server.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the backup",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "download",
          "description" : "download backup",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Backup"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "delete security server backup",
        "operationId" : "deleteBackup",
        "description" : "SS administrator deletes the backup of the security server.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the backup",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Backup"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/backups/{id}/restore" : {
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "restore configuration from backup",
        "operationId" : "restoreBackup",
        "description" : "SS administrator restores the configuration from backup.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the backup",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "restore ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Backup"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/clients" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "search security server clients",
        "operationId" : "getClients",
        "description" : "SS administrator views or search the clients of the security server.",
        "parameters" : [ {
          "in" : "query",
          "name" : "term",
          "description" : "pass an optional search string for looking up clients",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "offset",
          "description" : "number of records to skip for pagination",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "in" : "query",
          "name" : "limit",
          "description" : "maximum number of records to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0,
            "maximum" : 50
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Client"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "adds new client for security server",
        "operationId" : "addClient",
        "description" : "Adds an item to the system",
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Client"
              }
            }
          },
          "description" : "client to add"
        }
      }
    },
    "/clients/{id}" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get security server client information",
        "operationId" : "getClient",
        "description" : "SS administrator views the client details of the security server.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Client"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "update security server client information",
        "operationId" : "updateClient",
        "description" : "SS administrator updates the client information.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "other",
          "description" : "other parameters tbd",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "update ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Client"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "delete security server client",
        "operationId" : "deleteClient",
        "description" : "SS administrator deletes the client of the security server.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Client"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/clients/{id}/certificates" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get security server client TLS certificates information",
        "operationId" : "getClientCertificates",
        "description" : "SS administrator views the TLS certificates for the client.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Certificate"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "add new certificate for the security server client",
        "operationId" : "addClientCertificate",
        "description" : "SS administrator adds a new certificate for the client.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "file",
          "description" : "certificate file",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Certificate"
              }
            }
          },
          "description" : "certificate to add"
        }
      }
    },
    "/clients/{id}/certificates/{cid}" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get certificate information for the selected client",
        "operationId" : "getClientCertificate",
        "description" : "SS administrator views certificate details.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "cid",
          "description" : "id of the certificate",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Certificate"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "delete certificate",
        "operationId" : "deleteClientCertificate",
        "description" : "SS administrator deletes the certificate.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "cid",
          "description" : "id of the certificate",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Certificate"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/clients/{id}/certificates/{cid}/verify" : {
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "update certificate information",
        "operationId" : "updateClientCertificate",
        "description" : "SS administrator updates the certificate information.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "cid",
          "description" : "id of the certificate",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "other",
          "description" : "other parameters tbd",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "update ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Certificate"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/clients/{id}/groups" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get local groups for the selected client",
        "operationId" : "getClientGroups",
        "description" : "SS administrator views the local groups for the client.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Group"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "add new local group for the security server client",
        "operationId" : "addClientGroup",
        "description" : "SS administrator adds a new local group for the client.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group"
              }
            }
          },
          "description" : "group to add"
        }
      }
    },
    "/clients/{id}/groups/{gid}" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get local group information for the selected client",
        "operationId" : "getClientGroup",
        "description" : "SS administrator views local group details.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "gid",
          "description" : "id of the local group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Group"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "update local group information",
        "operationId" : "updateClientGroup",
        "description" : "SS administrator updates the local group information.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "gid",
          "description" : "id of the local group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "other",
          "description" : "other parameters tbd",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "update ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Group"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "delete local group",
        "operationId" : "deleteClientGroup",
        "description" : "SS administrator deletes the local group.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "gid",
          "description" : "id of the local group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Group"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/clients/{id}/groups/{gid}/members" : {
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "add new member for the local group",
        "operationId" : "addClientGroupMember",
        "description" : "SS administrator adds a new member for the local group.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "gid",
          "description" : "id of the local group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Member"
              }
            }
          },
          "description" : "member to add"
        }
      }
    },
    "/clients/{id}/groups/{gid}/members/{mid}" : {
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "delete member from local group",
        "operationId" : "deleteClientGroupMember",
        "description" : "SS administrator deletes the member from local group.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "gid",
          "description" : "id of the local group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "mid",
          "description" : "id of the member",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Member"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/clients/{id}/serviceclients" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get service clients for the selected client",
        "operationId" : "getClientServiceclients",
        "description" : "SS administrator views the service clients for the client.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ServiceClient"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "add new service client for the security server client",
        "operationId" : "addClientServiceclient",
        "description" : "SS administrator adds a new service client for the client.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceClient"
              }
            }
          },
          "description" : "service client to add"
        }
      }
    },
    "/clients/{id}/serviceclients/{sid}" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get service client information for the selected client",
        "operationId" : "getClientServiceclient",
        "description" : "SS administrator views service client details.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "sid",
          "description" : "id of the service client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ServiceClient"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "update service client information",
        "operationId" : "updateClientServiceclient",
        "description" : "SS administrator updates the service client information.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "sid",
          "description" : "id of the service client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "other",
          "description" : "other parameters tbd",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "update ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ServiceClient"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "delete service client",
        "operationId" : "deleteClientServiceclient",
        "description" : "SS administrator deletes the service client.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "sid",
          "description" : "id of the service client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ServiceClient"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/clients/{id}/wsdls" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get security server client WSDL files",
        "operationId" : "getClientWsdls",
        "description" : "SS administrator views the WSDL files for the client.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Temp"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "update security server client WSDL files",
        "operationId" : "updateClientWsdls",
        "description" : "SS administrator updates TLS certicates for the client.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client TLS certificate",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "other",
          "description" : "other parameters tbd",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "update ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Temp"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "delete security server client TLS certificate",
        "operationId" : "deleteClientWsdl",
        "description" : "SS administrator deletes the TLS certificate for client.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client TLS certificate",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Temp"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/clients/{id}/register" : {
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "register security server client",
        "operationId" : "registerClient",
        "description" : "SS administrator registers client.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Client"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/clients/{id}/unregister" : {
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "unregister security server client",
        "operationId" : "unregisterClient",
        "description" : "SS administrator unregisters client.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Client"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/clients/{id}/settings" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get server settings",
        "operationId" : "getClientSettings",
        "description" : "SS administrator views the settings for the client.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the client",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Settings"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/login" : {
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "login to the service and return the authentication cookie",
        "operationId" : "login",
        "description" : "SS administrator logs in to the GUI.",
        "security" : [ ],
        "parameters" : [ {
          "in" : "query",
          "name" : "username",
          "description" : "username of the user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "password",
          "description" : "password of the user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Login ok. The session ID is returned in a cookie named `JSESSIONID`. You need to include this cookie in subsequent requests.",
            "headers" : {
              "Set-Cookie" : {
                "schema" : {
                  "type" : "string",
                  "example" : "JSESSIONID=abcde12345; Path=/; HttpOnly"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "description" : "User information"
        }
      }
    },
    "/logout" : {
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "logout from the service",
        "operationId" : "logout",
        "description" : "SS administrator logs out from GUI.",
        "security" : [ {
          "cookieAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "logout successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/system" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get system information",
        "operationId" : "getSystem",
        "description" : "SS administrator views the system information.",
        "responses" : {
          "200" : {
            "description" : "information fetched successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/System"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/system/anchor" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "view the configuration anchor information",
        "operationId" : "getAnchor",
        "description" : "SS administrator views the configuration anchor information.",
        "parameters" : [ {
          "in" : "query",
          "name" : "download",
          "description" : "to be decided",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "information fetched successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Anchor"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "upload a configuration anchor file",
        "operationId" : "uploadAnchor",
        "description" : "SS administrator uploads configuration anchor file",
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Anchor"
              }
            }
          },
          "description" : "Configuration to add"
        }
      },
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "update configuration anchor",
        "operationId" : "updateAnchor",
        "description" : "SS administrator updates configuration anchor information.",
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Anchor"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/system/timestamping" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "view the timestamping service information",
        "operationId" : "getTimestamping",
        "description" : "SS administrator views the timestamping service information.",
        "responses" : {
          "200" : {
            "description" : "information fetched successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Temp"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "add a timestamping service",
        "operationId" : "addTimestamping",
        "description" : "SS administrator adds new timestamping service",
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Temp"
              }
            }
          },
          "description" : "Timestamping service to add"
        }
      },
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "delete timestamping service",
        "operationId" : "deleteTimestamping",
        "description" : "SS administrator removes timestamping service.",
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Temp"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/tokens" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "search security server tokens",
        "operationId" : "getTokens",
        "description" : "SS administrator views or search the tokens of the security server.",
        "parameters" : [ {
          "in" : "query",
          "name" : "term",
          "description" : "pass an optional search string for looking up tokens",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "offset",
          "description" : "number of records to skip for pagination",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "in" : "query",
          "name" : "limit",
          "description" : "maximum number of records to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0,
            "maximum" : 50
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Token"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "adds new token for security server",
        "operationId" : "addToken",
        "description" : "Adds token to the system",
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Token"
              }
            }
          },
          "description" : "Token to add"
        }
      }
    },
    "/tokens/{id}" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get security server token information",
        "operationId" : "getToken",
        "description" : "SS administrator views the token details of the security server.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Token"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "update security server token information",
        "operationId" : "updateToken",
        "description" : "SS administrator updates the token information.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "other",
          "description" : "other parameters tbd",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "update ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Token"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "delete security server token",
        "operationId" : "deleteToken",
        "description" : "SS administrator deletes the token of the security server.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Token"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/tokens/{id}/keys" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "search security server keys for selected token",
        "operationId" : "getKeys",
        "description" : "SS administrator views or searches the keys for selected token.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "term",
          "description" : "pass an optional search string for looking up keys",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "offset",
          "description" : "number of records to skip for pagination",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "in" : "query",
          "name" : "limit",
          "description" : "maximum number of records to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0,
            "maximum" : 50
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Key"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "adds new key",
        "operationId" : "addKey",
        "description" : "Adds key for selected token.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Key"
              }
            }
          },
          "description" : "Key to add"
        }
      }
    },
    "/tokens/{id}/keys/{kid}" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get key information for the selected key",
        "operationId" : "getKey",
        "description" : "SS administrator views key details.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "kid",
          "description" : "id of the key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Key"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "update key information",
        "operationId" : "updateKey",
        "description" : "SS administrator updates the key information.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "kid",
          "description" : "id of the key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "other",
          "description" : "other parameters tbd",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "update ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Key"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "delete key",
        "operationId" : "deleteKey",
        "description" : "SS administrator deletes the key.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "kid",
          "description" : "id of the key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Key"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/tokens/{id}/keys/{kid}/certificates" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "search security server certificates for selected key",
        "operationId" : "getCertificates",
        "description" : "SS administrator views or search the certificates for the key.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "kid",
          "description" : "id of the key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "term",
          "description" : "pass an optional search string for looking up certificates",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "offset",
          "description" : "number of records to skip for pagination",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "in" : "query",
          "name" : "limit",
          "description" : "maximum number of records to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0,
            "maximum" : 50
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Certificate"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "adds new certificate for selected key",
        "operationId" : "addCertificate",
        "description" : "Adds certificate to the system",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "kid",
          "description" : "id of the key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "import",
          "description" : "import file",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : false
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Certificate"
              }
            }
          },
          "description" : "Certificate to add"
        }
      }
    },
    "/tokens/{id}/keys/{kid}/certificates/{cid}" : {
      "get" : {
        "tags" : [ "security server" ],
        "summary" : "get certificate information",
        "operationId" : "getCertificate",
        "description" : "SS administrator views certificate details.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "kid",
          "description" : "id of the key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "cid",
          "description" : "id of the certificate",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Certificate"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "update security server certificate information",
        "operationId" : "updateCertificate",
        "description" : "SS administrator updates the certificate information.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "kid",
          "description" : "id of the key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "cid",
          "description" : "id of the certificate",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "action",
          "description" : "another way to do activate/register/etc.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "update ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Certificate"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "delete certificate",
        "operationId" : "deleteCertificate",
        "description" : "SS administrator deletes the certificate.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "kid",
          "description" : "id of the key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "cid",
          "description" : "id of the certificate",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Key"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/tokens/{id}/keys/{kid}/certificates/{cid}/activate" : {
      "put" : {
        "tags" : [ "security server" ],
        "summary" : "activate certificate",
        "operationId" : "activateCertificate",
        "description" : "SS administrator activates selected certificate.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "kid",
          "description" : "id of the key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "cid",
          "description" : "id of the certificate",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "certificate activated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Certificate"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    },
    "/tokens/{id}/login" : {
      "post" : {
        "tags" : [ "security server" ],
        "summary" : "logins to token",
        "operationId" : "loginToken",
        "description" : "Login to token",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Token"
              }
            }
          },
          "description" : "Token to add"
        }
      }
    },
    "/tokens/{id}/logout" : {
      "delete" : {
        "tags" : [ "security server" ],
        "summary" : "logout from token",
        "operationId" : "logoutToken",
        "description" : "SS administrator logs out from token.",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "logout successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Token"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input"
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "cookieAuth" : {
        "type" : "apiKey",
        "in" : "cookie",
        "name" : "JSESSIONID"
      }
    },
    "schemas" : {
      "Anchor" : {
        "type" : "object",
        "required" : [ "id", "name", "type", "status", "expires", "language", "version" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : 123
          },
          "name" : {
            "type" : "string",
            "example" : "Authentication key"
          },
          "type" : {
            "type" : "string",
            "example" : "AUTH"
          },
          "status" : {
            "type" : "string",
            "example" : "Registered"
          },
          "language" : {
            "type" : "string",
            "example" : "en"
          },
          "version" : {
            "type" : "string",
            "example" : "v1.00"
          },
          "expires" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-12-15T00:00:00.001Z"
          }
        }
      },
      "Backup" : {
        "type" : "object",
        "required" : [ "id", "name", "status", "date" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "configuration_backup_20181224"
          },
          "status" : {
            "type" : "string",
            "example" : "completed"
          },
          "date" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-12-15T00:00:00.001Z"
          }
        }
      },
      "Certificate" : {
        "type" : "object",
        "required" : [ "id", "name", "type", "status", "expires" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : 123
          },
          "name" : {
            "type" : "string",
            "example" : "Authentication key"
          },
          "type" : {
            "type" : "string",
            "example" : "AUTH"
          },
          "status" : {
            "type" : "string",
            "example" : "Registered"
          },
          "expires" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-12-15T00:00:00.001Z"
          }
        }
      },
      "Client" : {
        "type" : "object",
        "required" : [ "id", "name", "status", "date" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "subsystem:111-111-111:12345678"
          },
          "name" : {
            "type" : "string",
            "example" : "Library"
          },
          "status" : {
            "type" : "string",
            "example" : "Registered"
          },
          "date" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-12-15T00:00:00.001Z"
          },
          "settings" : {
            "$ref" : "#/components/schemas/Settings"
          }
        }
      },
      "Group" : {
        "type" : "object",
        "required" : [ "id", "name", "status", "date" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "Group name"
          },
          "status" : {
            "type" : "string",
            "example" : "completed"
          },
          "date" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-12-15T00:00:00.001Z"
          }
        }
      },
      "Key" : {
        "type" : "object",
        "required" : [ "id", "name", "type", "status", "expires" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : 123
          },
          "name" : {
            "type" : "string",
            "example" : "Authentication key"
          },
          "type" : {
            "type" : "string",
            "example" : "AUTH"
          },
          "status" : {
            "type" : "string",
            "example" : "Registered"
          },
          "expires" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-12-15T00:00:00.001Z"
          }
        }
      },
      "Member" : {
        "required" : [ "id" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : 123
          }
        },
        "type" : "object"
      },
      "ServiceClient" : {
        "required" : [ "id" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : 123
          }
        },
        "type" : "object"
      },
      "Settings" : {
        "required" : [ "ip" ],
        "properties" : {
          "ip" : {
            "type" : "string",
            "example" : "123.123.123.123"
          },
          "os" : {
            "type" : "string",
            "example" : "Ubuntu"
          }
        },
        "type" : "object"
      },
      "Token" : {
        "type" : "object",
        "required" : [ "id", "name", "type", "status", "expires" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : 123
          },
          "name" : {
            "type" : "string",
            "example" : "Authentication key"
          },
          "type" : {
            "type" : "string",
            "example" : "AUTH"
          },
          "status" : {
            "type" : "string",
            "example" : "Registered"
          },
          "expires" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-12-15T00:00:00.001Z"
          }
        }
      },
      "System" : {
        "type" : "object",
        "required" : [ "anchor", "timestamping", "authorities", "certificate" ],
        "properties" : {
          "anchor" : {
            "$ref" : "#/components/schemas/Temp"
          },
          "timestamping" : {
            "$ref" : "#/components/schemas/Temp"
          },
          "authorities" : {
            "$ref" : "#/components/schemas/Temp"
          },
          "certificate" : {
            "$ref" : "#/components/schemas/Temp"
          }
        }
      },
      "Temp" : {
        "required" : [ "temp" ],
        "properties" : {
          "temp" : {
            "type" : "string",
            "example" : "Temp"
          }
        },
        "type" : "object"
      },
      "User" : {
        "required" : [ "username" ],
        "properties" : {
          "username" : {
            "type" : "string",
            "example" : "Guest"
          }
        },
        "type" : "object"
      }
    }
  },
  "security" : [ {
    "cookieAuth" : [ ]
  } ]
}