openapi: 3.0.0
servers:
  - description: X-Road API Design
    url: https://virtserver.swaggerhub.com/Gofore/X-Road/1.0.0
info:
  description: X-Road UI Based API
  version: "1.0.1"
  title: X-Road UI Based API
  contact:
    email: lauri.koutaniemi@gofore.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
tags:
  - name: security server
    description: <br>Security Server operations and API calls
  - name: central server
    description: <br>Central Server operations and API calls
paths:
  /backups:
    get: # ok
      tags:
        - security server
      summary: get security server backups
      operationId: getBackups
      description: SS administrator views the backups for the security server.
      responses:
        '200':
          description: list of backups
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/Backup'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    post: # ok
      tags:
        - security server
      summary: add new backup for the security server
      operationId: addBackup
      description: Adds backup to the system
      responses:
        '201':
          description: item created
        '202':
          description: item accepted
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
        description: backup information (optional)
  /backups/upload:
    post: # ok
      tags:
        - security server
      summary: upload new backup for the security server
      operationId: uploadBackup
      description: Uploads new backup to the system
      responses:
        '201':
          description: item created
        '202':
          description: item accepted
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        description: backup to add
  /backups/{filename}:
    delete: # ok
      tags:
        - security server
      summary: delete security server backup
      operationId: deleteBackup
      description: SS administrator deletes the backup of the security server.
      parameters:
        - in: path
          name: filename
          description: filename of the backup
          required: true
          schema:
            type: string
            format: filename
            minLength: 1
            maxLength: 255
      responses:
        '202':
          description: item accepted for deletion
        '204':
          description: deletion was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '500':
          description: internal server error
  /backups/{filename}/restore: 
    put: # ok
      tags:
        - security server
      summary: restore configuration from backup
      operationId: restoreBackup
      description: SS administrator restores the configuration from backup.
      parameters:
        - in: path
          name: filename
          description: filename of the backup
          required: true
          schema:
            type: string
            format: filename
            minLength: 1
            maxLength: 255
      responses:
        '202':
          description: item accepted
        '204':
          description: request was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /backups/{filename}/download:
    get: # ok
      tags:
        - security server
      summary: download security server backup
      operationId: downloadBackup
      description: SS administrator downloads the backup of the security server.
      parameters:
        - in: path
          name: filename
          description: filename of the backup
          required: true
          schema:
            type: string
            format: filename
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: backup file
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /certificates/{hash}:
    get: # ok
      tags:
        - security server
      summary: get certificate information
      operationId: getCertificate
      description: SS administrator views certificate details.
      parameters:
        - in: path
          name: hash
          description: SHA-1 hash of the certificate
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDetails'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    delete: # ok
      tags:
        - security server
      summary: delete certificate
      operationId: deleteCertificate
      description: SS administrator deletes the certificate.
      parameters:
        - in: path
          name: hash
          description: SHA-1 hash of the certificate
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: deletion was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '500':
          description: internal server error
  /certificates/{hash}/activate:
    put: # ok
      tags:
        - security server
      summary: activate certificate
      operationId: activateCertificate
      description: SS administrator activates selected certificate.
      parameters:
        - in: path
          name: hash
          description: SHA-1 hash of the certificate
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: request was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /certificates/{hash}/disable:
    put: # ok
      tags:
        - security server
      summary: disable certificate
      operationId: disableCertificate
      description: SS administrator disables selected certificate.
      parameters:
        - in: path
          name: hash
          description: SHA-1 hash of the certificate
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: request was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /certificates/{hash}/register:
    put: # ok
      tags:
        - security server
      summary: register certificate
      operationId: registerCertificate
      description: SS administrator registers selected certificate.
      parameters:
        - in: path
          name: hash
          description: SHA-1 hash of the certificate
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: request was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /certificates/{hash}/unregister:
    put: # ok
      tags:
        - security server
      summary: unregister certificate
      operationId: unregisterCertificate
      description: SS administrator unregisters selected certificate.
      parameters:
        - in: path
          name: hash
          description: SHA-1 hash of the certificate
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: request was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /clients:
    get: # ok
      tags:
        - security server
      summary: get security server clients
      operationId: getClients
      description: SS administrator views the clients of the security server.
      parameters:
        - in: query
          name: name
          description: pass an optional search string (name) for looking up clients
          required: false
          schema:
            type: string
            format: text
        - in: query
          name: instance
          description: pass an optional search string (instance) for looking up clients
          required: false
          schema:
            type: string
            format: text
        - in: query
          name: class
          description: pass an optional search string (class) for looking up clients
          required: false
          schema:
            type: string
            format: text
        - in: query
          name: code
          description: pass an optional search string (code) for looking up clients
          required: false
          schema:
            type: string
            format: text
        - in: query
          name: subsystem
          description: pass an optional search string (subsystem) for looking up clients
          required: false
          schema:
            type: string
            format: text
        - in: query
          name: show_members
          description: to include members for search results
          required: false
          schema:
            type: boolean
            default: true
        - in: query
          name: internal_search
          description: to search only clients inside security server
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: list of clients
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/Client'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    post: # ok
      tags:
        - security server
      summary: adds new client for security server
      operationId: addClient
      description: Adds an item to the system
      responses:
        '201':
          description: item created
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
        description: client to add
  /clients/{id}:
    get: # ok
      tags:
        - security server
      summary: get security server client information
      operationId: getClient
      description: SS administrator views the client details of the security server.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    put: # ok
      tags:
        - security server
      summary: update security server client information
      operationId: updateClient
      description: SS administrator updates the client information.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
        - in: query
          name: connection_type
          description: server connection type
          required: true
          schema:
            $ref: '#/components/schemas/ConnectionType'
      responses:
        '200':
          description: item modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    delete: # ok
      tags:
        - security server
      summary: delete security server client
      operationId: deleteClient
      description: SS administrator deletes the client of the security server.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      responses:
        '204':
          description: deletion was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '500':
          description: internal server error
  /clients/{id}/groups:
    get: # ok
      tags:
        - security server
      summary: get local groups for the selected client
      operationId: getClientGroups
      description: SS administrator views the local groups for the client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      responses:
        '200':
          description: list of local groups
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/Group'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    post: # ok
      tags:
        - security server
      summary: add new local group for the security server client
      operationId: addClientGroup
      description: SS administrator adds a new local group for the client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      responses:
        '201':
          description: item created
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        description: group to add
  /clients/{id}/groups/{code}:
    get: # ok
      tags:
        - security server
      summary: get local group information
      operationId: getGroup
      description: SS administrator views local group details.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: path
          name: code
          description: code of the local group
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    put: # ok
      tags:
        - security server
      summary: update local group information
      operationId: updateGroup
      description: SS administrator updates the local group information.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: path
          name: code
          description: code of the local group
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: query
          name: description
          description: local group description
          required: false
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: item modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    delete: # ok
      tags:
        - security server
      summary: delete local group
      operationId: deleteGroup
      description: SS administrator deletes the local group.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: path
          name: code
          description: code of the local group
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: deletion was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '500':
          description: internal server error
  /clients/{id}/groups/{code}/members:
    post: # ok
      tags:
        - security server
      summary: add new member for the local group
      operationId: addGroupMember
      description: SS administrator adds a new member for the local group.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: path
          name: code
          description: code of the local group
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: query
          name: member_id
          description: id of the member
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '201':
          description: item created
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
  /clients/{id}/groups/{code}/members/delete:
    post: # ok
      tags:
        - security server
      summary: delete member from local group
      operationId: deleteGroupMember
      description: SS administrator deletes the member from local group.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: path
          name: code
          description: code of the local group
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: query
          name: items
          description: array of members to be deleted
          required: true
          schema:
            type: array
            items:
              type: string
              format: text
      responses:
        '201':
          description: items deleted
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
  /clients/{id}/register:
    put: # ok
      tags:
        - security server
      summary: register security server client
      operationId: registerClient
      description: SS administrator registers client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      responses:
        '204':
          description: request was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /clients/{id}/serviceclients:
    get: # ok
      tags:
        - security server
      summary: get service clients for the selected client
      operationId: getClientServiceclients
      description: SS administrator views the service clients for the client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      responses:
        '200':
          description: list of service clients
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/ServiceClient'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    post: # ok
      tags:
        - security server
      summary: add new service client for the security server client
      operationId: addClientServiceclient
      description: SS administrator adds a new service client for the client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
        - in: query
          name: service_client_id
          description: id of the service client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1279
      responses:
        '201':
          description: item created
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
  /clients/{id}/sign-certificates:
    get: # ok
      tags:
        - security server
      summary: get security server client certificates information
      operationId: getClientCertificates
      description: SS administrator views the certificates for the client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      responses:
        '200':
          description: list of certificates
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/Certificate'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /clients/{id}/tls-certificates:
    get: # ok
      tags:
        - security server
      summary: get security server client TLS certificates information
      operationId: getClientTlsCertificates
      description: SS administrator views the TLS certificates for the client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      responses:
        '200':
          description: list of tls certificates
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/Certificate'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    post: # ok
      tags:
        - security server
      summary: add new certificate for the security server client
      operationId: addClientTlsCertificate
      description: SS administrator adds a new certificate for the client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      responses:
        '201':
          description: item created
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        description: certificate to add
  /clients/{id}/tls-certificates/{hash}:
    get: # ok
      tags:
        - security server
      summary: get TLS certificate
      operationId: getClientTlsCertificate
      description: SS administrator gets the TLS certificate for the selected client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
        - in: path
          name: hash
          description: SHA-1 hash of the certificate
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    delete: # ok
      tags:
        - security server
      summary: delete certificate
      operationId: deleteClientTlsCertificate
      description: SS administrator deletes the certificate from selected client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
        - in: path
          name: hash
          description: SHA-1 hash of the certificate
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: deletion was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '500':
          description: internal server error
  /clients/{id}/unregister:
    put: # ok
      tags:
        - security server
      summary: unregister security server client
      operationId: unregisterClient
      description: SS administrator unregisters client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      responses:
        '204':
          description: request was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /clients/{id}/services:
    get: # ok
      tags:
        - security server
      summary: get security server client services
      operationId: getClientServices
      description: SS administrator views the services for the client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      responses:
        '200':
          description: list of services
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/Service'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    post: # ok
      tags:
        - security server
      summary: add new service for the security server client
      operationId: addClientService
      description: SS administrator adds a new service for the client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
        - in: query
          name: url
          description: path for the service description file
          required: true
          schema:
            type: string
            format: url
            minLength: 1
            maxLength: 255
      responses:
        '201':
          description: item created
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
        description: service client to add
  /keys/{id}:
    get: # ok
      tags:
        - security server
      summary: get information for the selected key
      operationId: getKey
      description: SS administrator views key details.
      parameters:
        - in: path
          name: id
          description: id of the key
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Key'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    put: # ok
      tags:
        - security server
      summary: update key information
      operationId: updateKey
      description: SS administrator updates the key information.
      parameters:
        - in: path
          name: id
          description: id of the key
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: query
          name: name
          description: edit friendly name of the key
          required: false
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: item modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Key'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    delete: # ok
      tags:
        - security server
      summary: delete key
      operationId: deleteKey
      description: SS administrator deletes the key.
      parameters:
        - in: path
          name: id
          description: id of the key
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: deletion was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '500':
          description: internal server error
  /keys/{id}/certificates:
    post: # ok
      tags:
        - security server
      summary: adds new certificate for selected key
      operationId: addCertificate
      description: Adds certificate to the system
      parameters:
        - in: path
          name: id
          description: id of the key
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '201':
          description: item created
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        description: certificate to add
  /keys/{id}/generate-csr:
    put: # ok
      tags:
        - security server
      summary: generate csr for the selected key
      operationId: genrerateCsr
      description: SS administrator generates csr for the key.
      parameters:
        - in: path
          name: id
          description: id of the key
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: query
          name: key_usage
          description: inteded usage for the key (signing or authentication)
          required: false
          schema:
            $ref: '#/components/schemas/KeyUsageInfo'
        - in: query
          name: approved_ca
          description: approved certification service
          required: false
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: query
          name: csr_format
          description: format of the certificate signing request (PEM or DER)
          required: false
          schema:
            $ref: '#/components/schemas/CsrFormat'
        - in: query
          name: member_id
          description: security server client the certificate will be issued for (only for signing certificates)
          required: false
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '201':
          description: item created
          content:
            application/pkcs10:
              schema:
                type: string
                format: binary
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /keys/{id}/delete-csr:
    put: # ok
      tags:
        - security server
      summary: delete csr from the selected key
      operationId: deleteCsr
      description: SS administrator deletes csr from the key.
      parameters:
        - in: path
          name: id
          description: id of the key
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: query
          name: csr_id
          description: id of the csr
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: request was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /language:
    put: # ok
      tags:
        - security server
      summary: change language
      operationId: language
      description: SS administrator changes the language for the UI.
      parameters:
        - in: path
          name: code
          description: code of the language (language code)
          required: true
          schema:
            type: string
            format: text
            minLength: 2
            maxLength: 2
      responses:
        '200':
          description: language changed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /login:
    post: # ok
      tags:
        - security server
      summary: Logs in and returns the authentication cookie
      requestBody:
        required: true
        description: A JSON object containing the login and password.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      security:
        - CookieAuth: []
      responses:
        '200':
          description: >
            Successfully authenticated.
            The session ID is returned in a cookie named `JSESSIONID`. You need to include this cookie in subsequent requests.
          headers: 
            Set-Cookie:
              schema: 
                type: string
                minLength: 1
                maxLength: 255
                example: JSESSIONID=abcde12345; Path=/;
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
  /logout:
    delete: # ok
      tags:
        - security server
      summary: logout from the UI
      operationId: logout
      description: SS administrator logs out from UI.
      security:
        - CookieAuth: []
      responses:
        '204':
          description: deletion was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '500':
          description: internal server error
  /user:
    get: # ok
      tags:
        - security server
      summary: get user data for the logged user
      operationId: user
      description: SS administrator gets user data from backend.
      responses:
        '200':
          description: user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /operations/{id}:
    put: # ok
      tags:
        - security server
      summary: update operation
      operationId: updateOperation
      description: SS administrator updates the operation.
      parameters:
        - in: path
          name: id
          description: id of the operation
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: query
          name: url
          description: operation url
          required: false
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: query
          name: url_all
          description: operation url for all operations
          required: false
          schema:
            type: boolean
            example: false
            default: false
        - in: query
          name: timeout
          description: operation timeout value
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 10000
        - in: query
          name: timeout_all
          description: operation timeout value for all operations
          required: false
          schema:
            type: boolean
            example: false
            default: false
        - in: query
          name: ssl_auth
          description: operation ssl authentication
          required: false
          schema:
            type: boolean
            example: true
            default: true
        - in: query
          name: ssl_auth_all
          description: operation ssl authentication for all operations
          required: false
          schema:
            type: boolean
            example: false
            default: false
      responses:
        '200':
          description: item modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /operations/{id}/accessrights:
    get: # ok
      tags:
        - security server
      summary: get access rights for the selected operation
      operationId: getOperationAccessrights
      description: SS administrator views operation accessrights.
      parameters:
        - in: path
          name: id
          description: id of the operation
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: list of service client and access rights
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/ServiceClient'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    post:
      tags:
        - security server
      summary: adds new accessright for the selected operation
      operationId: addOperationAccessright
      description: Adds accessright to the operation
      parameters:
        - in: path
          name: id
          description: id of the operation
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: query
          name: items
          description: array of subject ids to add for the access right
          required: true
          schema:
            type: array
            uniqueItems: true
            items:
              type: string
              format: text
      responses:
        '201':
          description: item created
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessRight'
        description: accessright to add
    delete: # ok
      tags:
        - security server
      summary: remove accessright
      operationId: deleteOperationAccessright
      description: SS administrator removes accessright from selected operation.
      parameters:
        - in: path
          name: id
          description: id of the operation
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: query
          name: items
          description: items to be deleted
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Subject'
      responses:
        '204':
          description: deletion was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '500':
          description: internal server error
  /serviceclients/{id}/accessrights:
    get: # ok
      tags:
        - security server
      summary: get access rights for the selected service client.
      operationId: getServiceclientAccessrights
      description: SS administrator views service client's accessrights.
      parameters:
        - in: path
          name: id
          description: id of the service client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1279
      responses:
        '200':
          description: list of accessrights
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/AccessRight'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    post: # ok
      tags:
        - security server
      summary: adds new accessright for selected service client
      operationId: addServiceclientAccessright
      description: Adds accessright to the service client.
      parameters:
        - in: path
          name: id
          description: id of the service client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1279
        - in: query
          name: items
          description: array of subject ids to add for the access right
          required: true
          schema:
            type: array
            uniqueItems: true
            items:
              type: string
              format: text
      responses:
        '201':
          description: item created
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessRight'
        description: accessright to add
    delete: # ok
      tags:
        - security server
      summary: remove accessright
      operationId: deleteServiceclientAccessright
      description: SS administrator removes accessright from selected service client.
      parameters:
        - in: path
          name: id
          description: id of the service client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1279
        - in: query
          name: items
          description: items to be deleted
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Subject'
      responses:
        '204':
          description: deletion was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '500':
          description: internal server error
  /services/{id}:
    put: # ok
      tags:
        - security server
      summary: update url for the selected service
      operationId: updateService
      description: SS administrator updates the selected service.
      parameters:
        - in: path
          name: id
          description: id of the service
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: query
          name: url
          description: path for the service description file
          required: true
          schema:
            type: string
            format: url
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: item modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    delete: # ok
      tags:
        - security server
      summary: delete service
      operationId: deleteService
      description: SS administrator deletes the service.
      parameters:
        - in: path
          name: id
          description: id of the service
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: deletion was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '500':
          description: internal server error
  /services/{id}/disable:
    put: # ok
      tags:
        - security server
      summary: disable selected service
      operationId: disableService
      description: SS administrator disables service.
      parameters:
        - in: path
          name: id
          description: id of the service
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: query
          name: disabled_notice
          description: disabled service notice 
          required: false
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: request was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /services/{id}/enable:
    put: # ok
      tags:
        - security server
      summary: enable selected service
      operationId: enableService
      description: SS administrator enables service.
      parameters:
        - in: path
          name: id
          description: id of the service
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: request was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /services/{id}/refresh:
    put: # ok
      tags:
        - security server
      summary: refresh selected service
      operationId: refreshService
      description: SS administrator refreshes service.
      parameters:
        - in: path
          name: id
          description: id of the service
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: item refreshed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /services/{id}/operations:
    get: # ok
      tags:
        - security server
      summary: get operations for the selected service
      operationId: getServiceOperations
      description: SS administrator views the operations for the selected service.
      parameters:
        - in: path
          name: id
          description: id of the service
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/Operation'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /system: # ok
    get:
      tags:
        - security server
      summary: get system information
      operationId: getSystem
      description: SS administrator views the system information.
      responses:
        '200':
          description: system information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /system/anchor:
    get: # ok
      tags:
        - security server
      summary: view the configuration anchor information
      operationId: getAnchor
      description: SS administrator views the configuration anchor information.
      responses:
        '200':
          description: anchor information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Anchor'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    post: # ok
      tags:
        - security server
      summary: upload a configuration anchor file
      operationId: uploadAnchor
      description: SS administrator uploads configuration anchor file
      responses:
        '201':
          description: item created
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
      requestBody:
        content:
          application/xml:
            schema:
              type: string
              format: ascii
              minLength: 1
              maxLength: 1000000
        description: configuration anchor file
  /system/anchor/download:
    get: # ok
      tags:
        - security server
      summary: download configuration anchor information
      operationId: downloadAnchor
      description: SS administrator downloads the configuration anchor information.
      responses:
        '200':
          description: configuration anchor file
          content:
            application/xml:
              schema:
                type: string
                format: ascii
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /system/certificate:
    get: # ok
      tags:
        - security server
      summary: view the security server certificate information
      operationId: getSystemCertificate
      description: SS administrator views the security server TLS certificate information.
      responses:
        '200':
          description: certificate information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /system/certificate/export:
    get: # ok
      tags:
        - security server
      summary: download the security server certificate as gzip compressed tar archive
      operationId: downloadSystemCertificate
      description: SS administrator downloads the security server TLS certificate.
      responses:
        '200':
          description: information fetched successfully
          content:
            application/gzip:
              schema:
                type: string
                format: binary
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /system/certificate/generate-tls-key:
    put: # ok
      tags:
        - security server
      summary: generate new TLS key
      operationId: generateSystemCertificateTlsKey
      description: SS administrator generates new tls key.
      responses:
        '204':
          description: request was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /system/certificate/generate-csr:
    put: # ok
      tags:
        - security server
      summary: generate new certificate request
      operationId: generateSystemCertificateRequest
      description: SS administrator generates new certificate request.
      responses:
        '204':
          description: request was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /system/certificate/import:
    post: # ok
      tags:
        - security server
      summary: import new internal TLS certificate.
      operationId: importSystemCertificate
      description: SS administrator imports new internal TLS certificate
      responses:
        '201':
          description: item created
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        description: certificate to add
  /system/timestamping-services:
    get: # ok
      tags:
        - security server
      summary: view the timestamping services
      operationId: getTimestampingServices
      description: SS administrator views the timestamping services.
      responses:
        '200':
          description: list of timestamping services
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/TimestampingService'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    post: # ok
      tags:
        - security server
      summary: add a timestamping service
      operationId: addTimestampingService
      description: SS administrator selects new timestamping service
      responses:
        '201':
          description: item created
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimestampingService'
        description: Timestamping service to add
  /system/timestamping-services/{url}:
    delete: # ok
      tags:
        - security server
      summary: delete timestamping service
      operationId: deleteTimestampingService
      description: SS administrator removes timestamping service.
      parameters:
        - in: path
          name: url
          description: url of the timestamping service
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: deletion was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '500':
          description: internal server error
  /system/version:
    get: # ok
      tags:
        - security server
      summary: get information for the system version
      operationId: systemVersion
      description: SS administrator views key details.
      responses:
        '200':
          description: system version information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /tokens:
    get: # ok
      tags:
        - security server
      summary: get security server tokens
      operationId: getTokens
      description: SS administrator views tokens of the security server.
      responses:
        '200':
          description: list of tokens
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/Token'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /tokens/{id}:
    get: # ok
      tags:
        - security server
      summary: get security server token information
      operationId: getToken
      description: SS administrator views the token details of the security server.
      parameters:
        - in: path
          name: id
          description: id of the token
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    put: # ok
      tags:
        - security server
      summary: update security server token information
      operationId: updateToken
      description: SS administrator updates the token information.
      parameters:
        - in: path
          name: id
          description: id of the token
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: query
          name: name
          description: friendly name of the token
          required: false
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: item modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /tokens/{id}/keys:
    post: # ok
      tags:
        - security server
      summary: adds new key
      operationId: addKey
      description: Adds key for selected token.
      parameters:
        - in: path
          name: id
          description: id of the token
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: query
          name: label
          description: label for the new key
          required: false
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '201':
          description: item created
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Key'
        description: Key to add
  /tokens/{id}/login:
    put: # ok
      tags:
        - security server
      summary: logins to token
      operationId: loginToken
      description: Login to token 
      parameters:
        - in: path
          name: id
          description: id of the token
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /tokens/{id}/logout:
    put: # ok
      tags:
        - security server
      summary: logout from token
      operationId: logoutToken
      description: SS administrator logs out from token.
      parameters:
        - in: path
          name: id
          description: id of the token
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: logged out
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: XROAD-API-KEY
    CookieAuth:
      type: apiKey
      in: cookie
      name: JSESSIONID
  schemas:
    AccessRight: # ok
      required:
        - id
        - client_id
        - operation_code
        - operation_title
      properties:
        id:
          type: string
          format: text
          example: 123
          minLength: 1
          maxLength: 255
          readOnly: true
        client_id:
          type: string
          format: text
          description: <instance_id>:<member_class>:<member_code>:<subsystem>(optional)
          example: FI:GOV:123:ABC
          minLength: 1
          maxLength: 255
        operation_code:
          type: string
          format: text
          example: clientDeletion
          minLength: 1
          maxLength: 255
        operation_title:
          type: string
          format: text
          example: client deletion
          minLength: 1
          maxLength: 255
      type: object
    Anchor: # ok
      type: object
      required:
        - hash
        - created_at
      properties:
        hash:
          type: string
          format: hash
          example: 42:34:C3:22:55:42:34:C3:22:55:42:34:C3:22:55:42:34:C3:22:55:42:34:C3:22:55:42:34:C3
          minLength: 1
          maxLength: 255
        created_at:
          type: string
          format: date-time
          example: '2018-12-15T00:00:00.001Z'
          minLength: 24
          maxLength: 24
    Backup: # ok
      type: object
      required:
        - filename
        - created_at
      properties:
        filename:
          type: string
          format: filename
          example: configuration_backup_20181224.tar
          minLength: 1
          maxLength: 255
        created_at:
          type: string
          format: date-time
          example: '2018-12-15T00:00:00.001Z'
          minLength: 24
          maxLength: 24
    Certificate: # ok
      required:
      - issuer_common_name
      - not_after
      - ocsp_status
      - client_id
      - hash
      - status
      type: object
      properties:
        issuer_common_name:
          type: string
          format: text
          example: domain.com
          description: certificate issuer common name
          minLength: 1
          maxLength: 255
        ocsp_status:
          $ref: '#/components/schemas/OcspStatus'
        not_after:
          type: string
          format: date-time
          example: '2018-12-15T00:00:00.001Z'
          description: certificate validity not after
          minLength: 24
          maxLength: 24
        hash:
          type: string
          format: text
          example: 1234567890ABCDEF
          description: certificate SHA-1 hash
          minLength: 1
          maxLength: 255
        client_id:
          type: string
          format: text
          description: <instance_id>:<member_class>:<member_code>:<subsystem>(optional)
          example: FI:GOV:123:ABC
          minLength: 1
          maxLength: 255
        status:
          $ref: '#/components/schemas/CertificateStatus'
    CertificateDetails: # ok
      required:
      - issuer_distinguished_name
      - issuer_common_name
      - subject_distinguished_name
      - subject_common_name
      - not_before
      - not_after
      - serial
      - version
      - signature_algorithm
      - signature
      - public_key_algorithm
      - rsa_public_key_modulus
      - rsa_public_key_exponent
      - hash
      - key_usages
      - status
      type: object
      properties:
        issuer_distinguished_name:
          type: string
          format: text
          example: issuer123
          description: certificate issuer distinguished name
          minLength: 1
          maxLength: 255
        issuer_common_name:
          type: string
          format: text
          example: domain.com
          description: certificate issuer common name
          minLength: 1
          maxLength: 255
        subject_distinguished_name:
          type: string
          format: text
          example: subject123
          description: certificate subject distinguished name
          minLength: 1
          maxLength: 255
        subject_common_name:
          type: string
          format: text
          example: domain.com
          description: certificate subject common name
          minLength: 1
          maxLength: 255
        not_before:
          type: string
          format: date-time
          example: '2018-12-15T00:00:00.001Z'
          description: certificate validity not before
          minLength: 24
          maxLength: 24
        not_after:
          type: string
          format: date-time
          example: '2018-12-15T00:00:00.001Z'
          description: certificate validity not after
          minLength: 24
          maxLength: 24
        serial:
          type: string
          format: text
          example: '123456789'
          description: serial number
          minLength: 1
          maxLength: 255
        version:
          type: integer
          format: int32
          example: 3
          description: version
        signature_algorithm:
          type: string
          format: sha-256
          example: sha256WithRSAEncryption
          description: certificate signature algorithm
          minLength: 1
          maxLength: 255
        signature:
          type: string
          format: text
          example: '30af2fdc1780...'
          description: hex encoded certificate signature
          minLength: 1
          maxLength: 255
        public_key_algorithm:
          type: string
          format: sha-256
          example: 'sha256WithRSAEncryption'
          description: certificate public key algorithm
          minLength: 1
          maxLength: 255
        rsa_public_key_modulus:
          type: string
          format: hex
          example: c44421d601...
          description: hex encoded RSA public key modulus (if RSA key)
          minLength: 1
          maxLength: 1000
        rsa_public_key_exponent:
          type: integer
          format: int32
          example: 65537
          description: RSA public key exponent (if RSA key) as an integer
          minLength: 1
          maxLength: 255
        hash:
          type: string
          format: text
          example: 1234567890ABCDEF
          description: certificate SHA-1 hash
          minLength: 1
          maxLength: 255
        key_usages:
            type: array
            uniqueItems: true
            items:
              $ref: '#/components/schemas/KeyUsage'
        status:
          $ref: '#/components/schemas/CertificateStatus'
    CertificateAuthority: # ok
      type: object
      required:
        - name
        - response
        - expires_at
      properties:
        name:
          type: string
          format: text
          description: distinguished name
          example: /C=FI/O=X-Road Test/OU=X-Road Test CA OU/CN=X-Road Test CA CN
          minLength: 1
          maxLength: 255
        response:
          type: string
          format: text
          example: N/A
          minLength: 1
          maxLength: 1000
        expires_at:
          type: string
          format: date-time
          example: '2099-12-15T00:00:00.001Z'
          minLength: 24
          maxLength: 24
    CertificateStatus: # ok
      type: string
      format: enum
      example: IN_USE
      description: certificate state
      enum:
        - IN_USE
        - DISABLED
    Client: # ok
      type: object
      required:
        - member_class
        - member_code
        - subsystem_code
      properties:
        id:
          type: string
          format: text
          description: <instance_id>:<member_class>:<member_code>:<subsystem>(optional)
          example: FI:GOV:123:ABC
          minLength: 1
          maxLength: 1023
          readOnly: true
        member_name:
          type: string
          format: text
          example: FI
          minLength: 1
          maxLength: 255
        member_class:
          type: string
          format: text
          example: GOV
          minLength: 1
          maxLength: 255
        member_code:
          type: string
          format: text
          example: 123
          minLength: 1
          maxLength: 255
        subsystem_code:
          type: string
          format: text
          example: ABC
          minLength: 1
          maxLength: 255
        connection_type:
          $ref: '#/components/schemas/ConnectionType'
        status:
          $ref: '#/components/schemas/ClientStatus'
    ClientStatus: # ok
      type: string
      format: enum
      example: REGISTERED
      enum:
        - REGISTERED
        - SAVED
        - GLOBAL_ERROR
        - REGISTRATION_IN_PROGRESS
        - DELETION_IN_PROGRESS
    Configuration: # ok
      type: object
      required:
        - status
        - updated_at
        - next_update
      properties:
        status:
          $ref: '#/components/schemas/ConfigurationStatus'
        updated_at:
          type: string
          format: date-time
          description: last time updated
          example: '2018-12-15T00:00:00.001Z'
          minLength: 24
          maxLength: 24
        next_update:
          type: string
          format: date-time
          description: last time updated
          example: '2018-12-15T00:00:00.001Z'
          minLength: 24
          maxLength: 24
    ConfigurationStatus: # ok
      type: string
      format: enum
      example: SUCCESS
      enum:
        - SUCCESS # Everything ok
        - CONFCLIENT_STATUS_FAILED # Global configuration client status query failed
        - ERROR_CODE_INTERNAL # Internal error occurred."
        - ERROR_CODE_INVALID_SIGNATURE_VALUE # Invalid signature value."
        - ERROR_CODE_EXPIRED_CONF # The downloaded global configuration has expired."
        - ERROR_CODE_CANNOT_DOWNLOAD_CONF # Unable to download global configuration. Check network connection to global configuration provider."
        - ERROR_CODE_MISSING_PRIVATE_PARAM # The downloaded global configuration did not contain private parameters
    ConnectionType: # ok
      type: string
      format: enum
      example: HTTP
      default: HTTP
      enum:
        - HTTP
        - HTTPS
        - HTTPS_NO_AUTH
    CsrFormat: # ok
      type: string
      format: enum
      example: PEM
      default: PEM
      enum:
        - PEM
        - DER
    Group: # ok
      type: object
      required:
        - code
        - description
      properties:
        id:
          type: string
          format: text
          example: group123
          description: unique identifier
          minLength: 1
          maxLength: 255
        code:
          type: string
          format: text
          example: groupcode
          minLength: 1
          maxLength: 255
        description:
          type: string
          format: text
          example: description
          minLength: 1
          maxLength: 255
        member_count:
          type: integer
          format: uint
          minimum: 0
          maximum: 1000000
          example: 10
        updated_at:
          type: string
          format: date-time
          description: last time updated
          example: '2018-12-15T00:00:00.001Z'
          minLength: 24
          maxLength: 24
        members:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/GroupMember'
    GroupMember: # ok
      required:
        - id
        - name
        - created_at
      properties:
        id:
          type: string
          format: text
          example: FI:GOV:123:SS1
          minLength: 1
          maxLength: 255
        name:
          type: string
          format: text
          example: member name
          minLength: 1
          maxLength: 255
        created_at:
          type: string
          format: date-time
          example: '2018-12-15T00:00:00.001Z'
          minLength: 24
          maxLength: 24
      type: object
    Key: # ok
      type: object
      required:
        - name
        - label
        - type
        - status
        - read_only
        - certificates
      properties:
        id:
          type: string
          format: text
          example: 0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF
          minLength: 1
          maxLength: 255
          readOnly: true
        name:
          type: string
          format: text
          example: friendly name
          minLength: 1
          maxLength: 255
        label:
          type: string
          format: text
          example: key label
          minLength: 1
          maxLength: 255
        type:
          type: string
          format: text
          example: AUTH
          minLength: 1
          maxLength: 255
        status:
          $ref: '#/components/schemas/KeyStatus'
        read_only:
          type: boolean
          example: true
        certificates:
          type: array
          items:
            $ref: '#/components/schemas/Certificate'
    KeyStatus: # ok
      type: string
      format: enum
      example: REGISTERED
      description: key status
      enum:
        - SAVED
        - REGISTERED
    KeyUsage: # ok
      type: string
      format: enum
      example: NON_REPUDIATION
      description: certificate key usage
      enum:
        - DIGITAL_SIGNATURE
        - NON_REPUDIATION
        - KEY_ENCIPHERMENT
        - DATA_ENCIPHERMENT
        - KEY_AGREEMENT
        - KEY_CERT_SIGN
        - CRL_SIGN
        - ENCIPHER_ONLY
        - DECIPHER_ONLY
    KeyUsageInfo: # ok
      type: string
      format: enum
      example: AUTHENTICATION
      description: inteded usage for the key
      enum:
        - AUTHENTICATION
        - SIGNING
    Language: # ok
      required:
        - code
      properties:
        id:
          type: string
          format: text
          example: en
          minLength: 2
          maxLength: 2
          readOnly: true
      type: object
    LoginRequest: # ok
      required:
        - username
        - password
      properties:
        username:
          type: string
          format: text
          example: username
          minLength: 4
          maxLength: 255
        password:
          type: string
          format: password
          example: Password123
          minLength: 4
          maxLength: 255
      type: object
    Operation: # ok
      required:
        - url
        - code
        - timeout
        - ssl_auth
        - service_id
      properties:
        url:
          type: string
          format: url
          example: https://domain/service
          minLength: 1
          maxLength: 255
        code:
          type: string
          format: text
          example: ClientReg
          minLength: 1
          maxLength: 255
        timeout:
          type: integer
          format: uint
          example: 60
          minimum: 0
          maximum: 1000
        ssl_auth:
          type: string
          format: url
          example: https://domain.com/service
          minLength: 1
          maxLength: 255
        service_id:
          type: string
          format: url
          example: https://domain.com/service
          minLength: 1
          maxLength: 255
      type: object
    OcspResponders: # ok
      type: object
      required:
        - url
        - status
        - updated_at
        - next_update
      properties:
        url:
          type: string
          format: url
          description: service url
          example: https://domain.com/service
          minLength: 1
          maxLength: 255
        status:
          $ref: '#/components/schemas/OcspStatus'
        updated_at:
          type: string
          format: date-time
          description: last time updated
          example: '2018-12-15T00:00:00.001Z'
          minLength: 24
          maxLength: 24
        next_update:
          type: string
          format: date-time
          description: last time updated
          example: '2018-12-15T00:00:00.001Z'
          minLength: 24
          maxLength: 24
    OcspStatus: # ok
      type: string
      format: enum
      example: SUCCESS
      description: OCSP responder status
      enum:
        - SUCCESS # Everything ok
        - ERROR_CODE_OCSP_CONNECTION_ERROR # Unable to connect to the OCSP responder.
        - ERROR_CODE_OCSP_FAILED # Unable to fetch response from the OCSP responder.
        - ERROR_CODE_OCSP_RESPONSE_INVALID # Unable to parse the OCSP response.
        - ERROR_CODE_OCSP_UNINITIALIZED # Status request not sent yet.
    ServiceClient: # ok
      required:
        - id
        - name
        - access_rights
      properties:
        id:
          type: string
          format: text
          description: <service_client_type>:<instance_identifier>:<other_params>
          example: GLOBALGROUP:DEV:security-server-owners
          minLength: 1
          maxLength: 1279
        name:
          type: string
          format: text
          example: Security server owners
          minLength: 1
          maxLength: 255
        access_rights:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/AccessRight'
      type: object
    Service: # ok
      required:
        - url
        - type
        - disabled
        - disabled_notice
        - refreshed_date
        - operations
        - client_id
      properties:
        url:
          type: string
          format: url
          example: http://dev.xroad.rocks/services.wsdl
          minLength: 1
          maxLength: 255
        type:
          $ref: '#/components/schemas/ServiceType'
        disabled:
          type: boolean
          example: true
        disabled_notice:
          type: string
          format: text
          description: disabled notice
          example: default_disabled_service_notice
          minLength: 1
          maxLength: 255
        refreshed_date:
          type: string
          format: date-time
          description: time for service refresh
          example: "2018-12-15T00:00:00.001Z"
          minLength: 24
          maxLength: 24
        operations:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Operation'
        client_id:
          type: string
          format: text
          description: <instance_id>:<member_class>:<member_code>:<subsystem>(optional)
          example: FI:GOV:123:ABC
          minLength: 1
          maxLength: 255
      type: object
    ServiceType: # ok
      type: string
      format: text
      example: WSDL
      description: service type
      enum:
        - WSDL
        - REST
    Subject: # ok
      required:
        - id
      properties:
        id:
          type: string
          format: text
          example: 123
          readOnly: true
      type: object
    System: # ok
      type: object
      required:
        - anchor
        - configuration
        - timestamping_services
        - ocsp_responders
        - certificate_authorities
        - tls_certificate
        - version
      properties:
        anchor:
          $ref: '#/components/schemas/Anchor'
        configuration:
          $ref: '#/components/schemas/Configuration'
        timestamping_services:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/TimestampingService'
        ocsp_responders:
          $ref: '#/components/schemas/OcspResponders'
        certificate_authorities:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/CertificateAuthority'
        tls_certificate:
          $ref: '#/components/schemas/Certificate'
        version:
          $ref: '#/components/schemas/Version'
    TimestampingService: # ok
      required:
        - name
        - url
        - status
        - message
        - updated_at
      properties:
        name:
          type: string
          format: text
          description: name of the time stamping service
          example: X-Road Test TSA CN
          minLength: 1
          maxLength: 255
        url:
          type: string
          format: url
          description: url of the time stamping service
          example: http://dev.xroad.rocks:123
          minLength: 1
          maxLength: 255
        updated_at:
          type: string
          format: date-time
          description: last time updated
          example: '2018-12-15T00:00:00.001Z'
          minLength: 24
          maxLength: 24
        message:
          type: string
          format: text
          example: ok
          minLength: 1
          maxLength: 255
        status:
          $ref: '#/components/schemas/TimestampingStatus'
      type: object
    TimestampingStatus: # ok
      type: string
      format: enum
      example:  SUCCESS
      enum:
        - SUCCESS # Everything ok
        - ERROR_CODE_TIMESTAMP_REQUEST_TIMED_OUT # Connection to the timestamp server timed out. Check the network connection to the timestamp server.
        - ERROR_CODE_MALFORMED_TIMESTAMP_SERVER_URL # Malformed timestamp server URL. Check the URL.
        - ERROR_CODE_UNKNOWN # Unknown error code.
        - ERROR_CODE_UNINITIALIZED # The configuration client is initializing.
        - ERROR_CODE_TIMESTAMP_UNINITIALIZED # Connection ok, no timestamp request made yet.
        - ERROR_CODE_CONNECTION_FAILED # Connection to configuration client failed. Ensure that xroad-confclient is running.
    Token: # ok
      type: object
      required:
        - id
        - name
        - type
        - keys
        - status
      properties:
        id:
          type: string
          format: text
          example: 0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF
          minLength: 1
          maxLength: 255
          readOnly: true
        name:
          type: string
          format: text
          example: softToken-0
          minLength: 1
          maxLength: 255
        type:
          $ref: '#/components/schemas/TokenType'
        keys:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Key'
        status:
          $ref: '#/components/schemas/TokenStatus'
    TokenStatus: # ok
      type: string
      format: text
      example: OK
      description: token type
      enum:
        - OK # Normal operation status
        - USER_PIN_LOCKED # Blocked
        - USER_PIN_INCORRECT # Incorrect PIN was entered
        - USER_PIN_INVALID # Invalid PIN
        - USER_PIN_EXPIRED # PIN expired
        - USER_PIN_COUNT_LOW # Only a few tries left
        - USER_PIN_FINAL_TRY # Final try
        - NOT_INITIALIZED # Not inited
    TokenType: # ok
      type: string
      format: text
      example: SOFTWARE
      description: token type
      enum:
        - SOFTWARE
        - HARDWARE
    User: # ok
      required:
        - username
        - roles
        - permissions
      properties:
        username:
          type: string
          format: text
          example: Guest
          minLength: 1
          maxLength: 255
        roles:
            type: array
            uniqueItems: true
            items:
                type: string
                format: text
                example: 
        permissions:
            type: array
            uniqueItems: true
            items:
                type: string
                format: text
                example: 
      type: object
    Version: # ok
      required:
        - info
      properties:
        info:
          type: string
          format: text
          example: Security Server version 6.21.0-SNAPSHOT-20190411git32add470
          minLength: 1
          maxLength: 255
security:
  - ApiKeyAuth: []